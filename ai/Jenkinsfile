pipeline {
    parameters {
        string defaultValue:'10.1.180.16', name: 'server'
    }
    agent {label server}
   stages {
       stage('ENVPrepare') {
            steps {
                sh '''
                yum -y install gcc-toolset-10-*
                yum install -y git  openssl-devel bzip2-devel libffi-devel zlib-devel wget unzip xz-devel python39-pip python39 libjpeg-devel libpng-devel mesa-libGL numactl  gcc python39-devel ncurses-devel
                yum remove -y python3
                pip3 config set global.index-url https://mirrors.aliyun.com/pypi/simple
                wget http://10.1.180.190/ai/postsilicon_test/post_silicon_requirement.txt
                pip3 install -r post_silicon_requirement.txt
                wget http://10.1.180.190/ai/ONNXRUNTIME_v1.17.1.tar.gz
                tar -xvf ONNXRUNTIME_v1.17.1.tar.gz
                '''
            }
        }
        stage('BuildOpenBlas') {
            steps {
                sh '''
                source /opt/rh/gcc-toolset-10/enable
                git clone http:gitlab.hj-micro.com/ai/openblas.git
                cd openblas
                make clean
                DYNAMIC_ARCH=1 HOSTCC=gcc  USE_THREAD=1   USE_OPENMP=1 FC=gfortran  make -j $(nproc)

                make install
                '''
            }
        }
        stage('TestGEMM') {
            steps {
                sh '''
                source /opt/rh/gcc-toolset-10/enable
                git clone http:gitlab.hj-micro.com/ai/ai_model.git
                cd ai_model/GEMM
                g++ -O3 gemm.cpp -I/opt/OpenBLAS/include/ -L/opt/OpenBLAS/lib -Wl,-rpath,/opt/OpenBLAS/lib -lopenblas -o gemm
                chmod 777 gemmTest.sh
                ./gemmTest.sh
                '''
            }
        }
        stage('RunPerformanceTest') {
            steps {
                sh '''
                export HF_ENDPOINT=https://hf-mirror.com
                wget http://10.1.180.190/ai/postsilicon_test/arm_performance_test.sh
                chmod 777 arm_performance_test.sh
                wget http://10.1.180.190/ai/postsilicon_test/run_performance_test.sh
                wget http://10.1.180.190/ai/postsilicon_test/x86_performance_test.sh
                wget http://10.1.180.190/ai/postsilicon_test/resnet50_onnxruntime_test.py
                wget http://10.1.180.190/ai/postsilicon_test/resnet50.onnx
                wget http://10.1.180.190/ai/postsilicon_test/models.zip
                unzip models.zip
                chmod 777 x86_performance_test.sh
                bash run_performance_test.sh
                '''
            }
        }
    }   

   post {
        always{
            cleanWs()
       }
	    success {
	        sh '''
                echo done
	           '''
	    }
	}
}
